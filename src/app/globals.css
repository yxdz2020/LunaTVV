@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  .scrollbar-hide {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }

  .scrollbar-hide::-webkit-scrollbar {
    display: none; /* Chrome, Safari and Opera */
  }

  /* 源浏览器动画 */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* 弹窗淡入动画 */
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  /* 弹窗缩放进入动画 */
  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .animate-fadeIn {
    animation: fadeIn 0.2s ease-out;
  }

  .animate-scaleIn {
    animation: scaleIn 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  }
}

:root {
  --foreground-rgb: 255, 255, 255;
}

html,
body {
  height: 100%;
  overflow-x: hidden;
  /* 阻止 iOS Safari 拉动回弹 */
  overscroll-behavior: none;
}

body {
  color: rgb(var(--foreground-rgb));
}

html:not(.dark) body {
  background: linear-gradient(
    180deg,
    #e6f3fb 0%,
    #eaf3f7 18%,
    #f7f7f3 38%,
    #e9ecef 60%,
    #dbe3ea 80%,
    #d3dde6 100%
  );
  background-attachment: fixed;
}

/* 自定义滚动条样式 */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(31, 41, 55, 0.1);
}

::-webkit-scrollbar-thumb {
  background: rgba(75, 85, 99, 0.3);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(107, 114, 128, 0.5);
}

/* 视频卡片悬停效果 */
.video-card-hover {
  transition: transform 0.3s ease;
}

.video-card-hover:hover {
  transform: scale(1.05);
}

/* 渐变遮罩 */
.gradient-overlay {
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0) 0%,
    rgba(0, 0, 0, 0.8) 100%
  );
}

/* 隐藏移动端（<768px）垂直滚动条 */
@media (max-width: 767px) {
  html,
  body {
    -ms-overflow-style: none; /* IE & Edge */
    scrollbar-width: none; /* Firefox */
  }

  html::-webkit-scrollbar,
  body::-webkit-scrollbar {
    display: none; /* Chrome Safari */
  }
}

/* 隐藏所有滚动条（兼容 WebKit、Firefox、IE/Edge）- 排除ArtPlayer */
*:not(.artplayer):not(.artplayer *) {
  -ms-overflow-style: none; /* IE & Edge */
  scrollbar-width: none; /* Firefox */
}

*:not(.artplayer):not(.artplayer *)::webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}

/* View Transitions API 动画 */
@keyframes slide-from-top {
  from {
    clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

@keyframes slide-from-bottom {
  from {
    clip-path: polygon(0 100%, 100% 100%, 100% 100%, 0 100%);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

::view-transition-old(root),
::view-transition-new(root) {
  animation-duration: 0.8s;
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  animation-fill-mode: both;
}

/*
  切换时，旧的视图不应该有动画，它应该在下面，等待被新的视图覆盖。
  这可以防止在动画完成前，页面底部提前变色。
*/
::view-transition-old(root) {
  animation: none;
}

/* 从浅色到深色：新内容（深色）从顶部滑入 */
html.dark::view-transition-new(root) {
  animation-name: slide-from-top;
}

/* 从深色到浅色：新内容（浅色）从底部滑入 */
html:not(.dark)::view-transition-new(root) {
  animation-name: slide-from-bottom;
}

/* 强制播放器内部的 video 元素高度为 100%，并保持内容完整显示 */
div[data-media-provider] video {
  height: 100%;
  object-fit: contain;
}

.art-poster {
  background-size: contain !important; /* 使图片完整展示 */
  background-position: center center !important; /* 居中显示 */
  background-repeat: no-repeat !important; /* 防止重复 */
  background-color: #000 !important; /* 其余区域填充为黑色 */
}

/* 隐藏移动端竖屏时的 pip 按钮 */
@media (max-width: 1024px) {
  .art-control-pip {
    display: none !important;
  }

  .art-control-fullscreenWeb {
    display: none !important;
  }

  .art-control-volume {
    display: none !important;
  }
}

/* 修复音量控制hover区域 - 精确控制触发范围 */
@media (hover: hover) {
  .art-control-volume {
    position: relative !important;
    padding: 3px; /* 和弹幕按钮一样的hover区域 */
  }

  /* 缩小hover检测区域，只稍微扩展到面板方向 */
  .art-control-volume::before {
    content: '';
    position: absolute;
    top: -20px; /* 只扩展20px，避免过早触发 */
    left: -5px;
    right: -5px;
    bottom: -3px;
    z-index: -1;
    pointer-events: auto;
  }

  /* 按钮或面板hover时都显示音量面板 */
  .art-control-volume:hover .art-volume-panel,
  .art-volume-panel:hover {
    opacity: 1 !important;
    transform: translateY(0) !important;
    pointer-events: auto !important;
    transition: opacity 0.15s ease 0.1s, transform 0.15s ease 0.1s !important; /* 0.1s显示延迟 */
  }

  /* 音量面板默认隐藏状态，和弹幕一样的延迟 */
  .art-volume-panel {
    transition: opacity 0.15s ease 0.3s, transform 0.15s ease 0.3s !important; /* 0.3s隐藏延迟 */
  }
}

/* 修复移动端弹幕面板定位问题 - 根据不同挂载位置处理 */
@media (max-width: 768px) {
  /* 当弹幕插件挂载到控制栏中心时（横屏，宽度>=512px） */
  .art-controls-center .artplayer-plugin-danmuku .apd-config-panel,
  .art-controls-center .artplayer-plugin-danmuku .apd-style-panel {
    position: absolute !important; /* 加上这个关键属性！ */
    left: 10% !important;
    transform: translateX(-50%) !important;
    right: auto !important;
    max-width: calc(100vw - 40px) !important;
  }

  /* 当弹幕插件挂载到播放器容器时（竖屏，宽度<512px） */
  .art-video-player .artplayer-plugin-danmuku .apd-config-panel,
  .art-video-player .artplayer-plugin-danmuku .apd-style-panel {
    position: absolute !important;
    left: 50% !important; /* 竖屏时居中 */
    transform: translateX(-50%) !important;
    right: auto !important;
    max-width: calc(100vw - 40px) !important;
  }
}

/* VideoCard 光泽扫过动画 */
@keyframes card-shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

/* 平滑动画效果 */
@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(8px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fade-in 0.4s ease-out;
}

/* 状态过渡动画 */
.smooth-transition {
  transition: all 0.3s ease-in-out;
}

/* 移动端隐藏弹幕配置按钮 */
@media (max-width: 1080px), (hover: none) {
  .artplayer-plugin-danmuku .apd-config {
    display: none !important;
  }
}

/* 修复桌面端弹幕配置弹窗hover不稳定问题 */
@media (min-width: 1081px) and (hover: hover) {
  /* 扩大按钮的实际hover区域，但不影响视觉 */
  .artplayer-plugin-danmuku .apd-config {
    position: relative;
    padding: 3px; /* 增加一点内边距扩大hover区域 */
  }

  /* 按钮或面板hover时都显示面板 */
  .artplayer-plugin-danmuku .apd-config:hover .apd-config-panel,
  .artplayer-plugin-danmuku .apd-config .apd-config-panel:hover {
    opacity: 1 !important;
    pointer-events: auto !important;
    visibility: visible !important;
    transition: opacity 0.15s ease 0.1s !important; /* 添加0.1s显示延迟 */
  }

  /* 确保面板默认状态是隐藏的，隐藏时有延迟 */
  .artplayer-plugin-danmuku .apd-config-panel {
    opacity: 0;
    pointer-events: none;
    visibility: hidden;
    transition: opacity 0.15s ease 0.3s, visibility 0s ease 0.45s; /* 0.3s隐藏延迟 */
  }

  /* 面板内部元素在显示时可交互 */
  .artplayer-plugin-danmuku .apd-config-panel * {
    pointer-events: auto;
  }

  /* 防止进度条拖拽时弹窗干扰 */
  .artplayer[data-dragging="true"] .artplayer-plugin-danmuku .apd-config-panel {
    opacity: 0 !important;
    pointer-events: none !important;
    visibility: hidden !important;
    transition: none !important;
  }
}
